// <auto-generated />
using System;
using ImalatMontaj.Talep.DataAccess.Concrete.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ImalatMontaj.Talep.Mvc.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190610134358_initialDatabase")]
    partial class initialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ImalatMontaj.Talep.Entities.Concrete.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TalepId");

                    b.Property<string>("Yol")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("TalepId");

                    b.ToTable("Foto");
                });

            modelBuilder.Entity("ImalatMontaj.Talep.Entities.Concrete.Talep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TalepEdenAdSoyad")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TalepEdenDepartman")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TalepEdenTarihi")
                        .IsRequired();

                    b.Property<string>("TalepEdilenYer")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("TalepKontrolAdSoyad")
                        .HasMaxLength(50);

                    b.Property<string>("TalepKontrolDepartman")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TalepKontrolTarihi");

                    b.Property<string>("TalepOnayAdSoyad")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TalepOnayTarihi");

                    b.Property<string>("TalepYapanAdSoyad")
                        .HasMaxLength(50);

                    b.Property<string>("TalepYapanDepartman")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TalepYapanTalepTarihi");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("UrunTanimi")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Taleps");
                });

            modelBuilder.Entity("ImalatMontaj.Talep.Entities.Concrete.Foto", b =>
                {
                    b.HasOne("ImalatMontaj.Talep.Entities.Concrete.Talep", "Talep")
                        .WithMany("Fotos")
                        .HasForeignKey("TalepId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
